name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push-docker:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push data-fetch
        run: |
            docker build -t ${{ secrets.DOCKER_USERNAME }}/data-fetch:latest \
            -f ./data-fetch/Dockerfile.fetch ./data-fetch
            docker push ${{ secrets.DOCKER_USERNAME }}/data-fetch:latest

      - name: Build and push data-ingestion
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/data-ingestion:latest \
            -f ./data-ingestion/Dockerfile.ingestion ./data-ingestion
          docker push ${{ secrets.DOCKER_USERNAME }}/data-ingestion:latest

      - name: Build and push model-training
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/model-training:latest \
            -f ./model-training/Dockerfile.training ./model-training
          docker push ${{ secrets.DOCKER_USERNAME }}/model-training:latest

      - name: Build and push fastapi-model
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-model:latest \
            -f ./model_api/Dockerfile ./model_api
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-model:latest

  security-scan:
    name: Security Scan (Trivy & Snyk)
    runs-on: ubuntu-latest
    needs: build-and-push-docker

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image: "***/fastapi-model:latest"
          severity: HIGH,CRITICAL  
          ignore-unfixed: true   
          exit-code: 0           
          format: table

      - name: Run Snyk Scan
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: '${{ secrets.DOCKER_USERNAME }}/fastapi-model:latest'

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          chmod 600 kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl config use-context minikube

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f kubernetes/minio-deployment.yaml
          kubectl apply -f kubernetes/minio-service.yaml
          kubectl apply -f kubernetes/model-api-deployment.yaml
          kubectl apply -f kubernetes/model-api-service.yaml
          kubectl rollout status deployment/model-api -n default

      - name: Apply Tekton Pipelines
        run: |
          kubectl apply -f ml-pipeline/tekton_pipeline.yaml
          kubectl apply -f ml-pipeline/tekton_task_datafetch.yaml
          kubectl apply -f ml-pipeline/tekton_task_dataingestion.yaml
          kubectl apply -f ml-pipeline/tekton_task_modeltraining.yaml
          kubectl apply -f ml-pipeline/tekton_pipelinerun.yaml

  model-versioning:
    name: Data & Model Versioning (DVC)
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup DVC & Pull Latest Data
        run: |
          pip install dvc
          dvc pull

      - name: Push New Model to DVC
        run: |
          dvc add models/stock_forex_price_prediction_model.zip
          git add models.dvc
          git commit -m "Updated model version with DVC"
          git push
